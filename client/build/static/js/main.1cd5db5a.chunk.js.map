{"version":3,"sources":["redux/index.js","components/Nav.js","components/LoginBox.js","components/User.js","components/DeckSummary.js","components/Decks.js","components/App.js","components/Card.js","components/SearchCards.js","components/Deck.js","index.js"],"names":["initialState","deck","foundCard","name","colors","loading","currentUser","username","decks","loggedIn","store","createStore","prevState","arguments","length","undefined","action","type","Object","objectSpread","card","console","log","cards","map","_id","deck_id","toConsumableArray","concat","user","applyMiddleware","thunk","subscribe","getState","getCard","url","_len","args","Array","_key","arg","value","dispatch","axios","get","then","response","data","id","manaCost","types","description","text","power","toughness","image","imageUrl","addToDeck","deckId","createUser","post","logout","Nav","state","this","setState","props","react_default","a","createElement","Link","to","onClick","Component","withRouter","connect","LoginBox","loggedIN","onChange","handleChange","handleLogin","User","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","handleCreateUsername","e","_e$target","target","defineProperty","preventDefault","Redirect","className","handleLogout","components_LoginBox","landCount","count","curr","includes","DeckSummary","pathname","reduce","Decks","handleCreateDeck","deckName","deckDescription","user_id","i","components_DeckSummary","key","placeholder","App","es_Route","path","render","components_Decks","components_User","Card","join","src","alt","SearchCards","cardType","showLogin","handleSubmit","alert","search","creatureCount","Deck","location","filter","components_SearchCards","components_Card","put","saveDeckToDB","BrowserRouter","es","components_Nav","Switch","Route","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.1cd5db5a.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\"\nimport axios from \"axios\"\nimport thunk from \"redux-thunk\"\n\n// const baseUrl = process.env.BASE_URL\n\nconst initialState = {\n    deck: \"\",\n    foundCard: {\n        name: \"\",\n        colors: [],\n\n    },\n    loading: false,\n    currentUser: {\n        username: '', \n        decks: []\n    },\n    loggedIn: false\n}\n\nconst reducer = (prevState = initialState, action) => {\n    switch (action.type) {\n        case \"START_LOADING\":\n            return {\n                ...prevState,\n                loading: true\n            }\n        case \"GET_CARD\":\n            return {\n                ...prevState,\n                foundCard: action.card,\n                loading: false\n            }\n        case \"CREATE_DECK\":\n            return {\n                ...prevState,\n                deck: action.deck\n            }\n        case \"ADD_TO_DECK\":\n            console.log(\"PrevState: \", prevState.currentUser.decks[0].cards)\n            return {\n                ...prevState,\n                currentUser: { \n                    ...prevState.currentUser, \n                    decks: prevState.currentUser.decks.map(\n                        (deck) => deck._id === action.deck_id ? {...deck, cards: [...deck.cards, action.card]}\n                        : deck\n                    )\n                },\n                loading: false\n            }\n        case \"SAVE_DECK\":\n            return {\n                ...prevState,\n                decks: action.decks\n            }\n        case \"LOGIN\":\n            return {\n                ...prevState,\n                loggedIn: true,\n                currentUser: {...prevState.user, ...action.user},\n                loading: false \n            }\n        case \"LOGOUT\":\n            return {\n                ...prevState,\n                loggedIn: false,\n                currentUser: {username: ''},\n                loading: false \n            }\n        case \"CREATE_USER\":\n            return {\n                ...prevState,\n                username: action.user,\n                decks: [],\n                loading: false\n            }\n        default:\n            return prevState;\n    }\n}\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nstore.subscribe(() => console.log(store.getState()));\n\n//ACTION CREATORS\n\nexport const getCard = (...args) => {\n    let url = \"https://api.magicthegathering.io/v1/cards?random=true&pageSize=1\"\n    if (args) {\n        args.map(arg => {\n            return url += \"&\" + arg.name + \"=\" + arg.value\n        })\n    }\n    return dispatch => {\n        console.log(\"dis: \", dispatch)\n        //DO THE PROMISE STUFF\n        store.dispatch({type: \"START_LOADING\"});\n        axios.get(url)\n            .then(response => {\n                let card = {}\n                if (response.data.cards.length > 0){\n                    card = {\n                        id: response.data.cards[0].id,\n                        name: response.data.cards[0].name,\n                        colors: response.data.cards[0].colors || [],\n                        manaCost: response.data.cards[0].manaCost,\n                        types: response.data.cards[0].types,\n                        description: response.data.cards[0].text,\n                        power: response.data.cards[0].power,\n                        toughness: response.data.cards[0].toughness,\n                        image: response.data.cards[0].imageUrl\n                    }\n                }\n                store.dispatch({\n                    type: \"GET_CARD\",\n                    card: card\n                })\n            })\n    }\n}\nexport const addToDeck = (card, deckId) => {\n    console.log(\"Card: \", card, \" DECK ID: \", deckId)\n    return dispatch => {\n        store.dispatch({\n            type: \"ADD_TO_DECK\",\n            card: card,\n            deck_id: deckId\n        })\n    }\n}\n\nexport const createUser = (username) => {\n    return dispatch => {\n        axios.post('/api/v1/users/', {username: username})\n            .then(response => {\n                if (response) {\n                    store.dispatch({\n                        type: \"LOGIN\",\n                        user: response.data\n                    })\n                }\n            })\n    }\n}\n\nexport const login = (user) => {\n    return dispatch => {\n        axios.post('/api/v1/users/login', {user: { username: user }})\n            .then(response => {\n                if (response) {\n                    store.dispatch({\n                        type: \"LOGIN\",\n                        user: response.data\n                    })\n                } else {\n                    return user\n                }\n                console.log(response.data)\n        })\n    }\n}\n\nexport const logout = () => {\n    return dispatch => {\n        store.dispatch({\n            type: \"LOGOUT\"\n        })\n    }\n}\n\nexport const createDeck = (name, description) => {\n    return dispatch => {\n        axios.post('/api/v1/decks', { deck: { name: name, description: description, user_id: store.getState().currentUser.id }})\n            .then(response => {\n                if (response) {\n                    store.dispatch({\n                        type: \"CREATE_DECK\",\n                        deck: response.data\n                    })\n                } else {\n                    console.log(response.data)\n                }\n            })\n    }\n}\n\nexport const saveDeckToDB = (deck, cards) => {\n    return dispatch => {\n        axios.put('/api/v1/decks/'+ deck.id, { deck: { cards: [...deck.cards, ...cards] }})\n            .then(response => {\n                if (response) {\n                    store.dispatch({\n                        type: \"SAVE_DECK\",\n                        decks: response.data\n                    })\n                }\n            })\n    }\n}\n\n\nexport default store;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport { logout } from '../redux'\nimport '../styles/Nav.css'\n\nclass Nav extends Component {\n  state = { loading: true, loggedIn: false, currentUser: ''}\n\n  async componentDidMount() {\n    this.setState = {loading: false, currentUser: this.props.currentUser, loggedIn: this.props.loggedIn}\n  }\n\n  render() {\n    // const displayName = this.props.currentUser.username.replace(/\\b/).toUpperCase() + this.props.currentUser.username.replace(/\\B/).toLowerCase()\n    return (\n          <ul>\n            <li><Link to=\"/\"><b>Home</b></Link></li>\n            {/* <li><Link to=\"/card\">Search Cards</Link></li> */}\n            <li></li>\n            <li><Link to=\"/decks\"><b>{this.props.currentUser.username}</b></Link></li>\n            <li>{this.props.loggedIn ? <a onClick={logout()}><b>Logout</b></a> : <Link to=\"/\"><b>Login</b></Link>}</li>\n          </ul>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => {\n      dispatch(logout)\n    }\n  }\n}\n\nexport default withRouter(connect(prevState => prevState, mapDispatchToProps)(Nav))","import React, { Component } from 'react';\nimport '../styles/LoginBox.css';\n\nclass LoginBox extends Component {\n  state = { loggedIN: false };\n\n  render() {\n    return (\n      <div id=\"LoginBox\">\n        <form name=\"login\">\n          <input onChange={this.props.handleChange} value={this.username} name=\"username\" type=\"text\" />\n          <button onClick={this.props.handleLogin}>Login</button>\n          <button onClick={this.props.createUser}>Create Username</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LoginBox;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login, createUser } from '../redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport LoginBox from './LoginBox';\n\nconst mapStateToProps = (state) => {\n  return { user: state.user, loggedIn: state.loggedIn }\n}\n\nclass User extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { username: '', loggedIn: false}\n    this.handleChange = this.handleChange.bind(this)\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleCreateUsername = this.handleCreateUsername.bind(this)\n  }\n  handleChange(e) {\n    const { name, value } = e.target\n    this.setState({\n      [name]: value\n    })\n  }\n  handleLogin(e) {\n    e.preventDefault()\n    console.log('test')\n    this.setState(login(this.state.username))\n  }\n  handleCreateUsername(e) {\n    e.preventDefault()\n    if(this.state.username === /\\W?/) {\n      return <p>Please only use letters, numbers, and underscores. No spaces or special characters. :)</p>\n    } else {\n      this.setState(\n        createUser(this.state.username)\n      )\n    }\n    console.log(`Created user: ${this.state.username}`)\n  }\n  render() {\n    if (this.props.loggedIn === true) {\n      return <Redirect to=\"/decks\" />\n    } \n    return (\n      <div className=\"user\">\n        {!this.props.loggedIn ?\n          <LoginBox handleLogin={ this.handleLogin } createUser={ this.handleCreateUsername } handleChange={ this.handleChange } />\n        : <button onClick={this.handleLogout}>Logout</button>\n        }\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, {createUser: createUser})(User))","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport '../styles/Deck.css'\nimport { Link, withRouter } from 'react-router-dom'\n\nconst mapStateToProps = state => {\n    return { user: state.user, loggedIn: state.loggedIn }\n}\n\nconst landCount = (count, curr) => {\n    if (curr.types.includes(\"Land\"))\n        count++\n    return count\n}\n\nclass DeckSummary extends Component {\n\n    render() {\n        return (\n            <div className=\"deckSummary\">\n            {this.props.loggedIn ?\n                <div><h2>{this.props.deck.name}</h2>\n                    <span><h3>Click <Link to={{pathname: '/deck', state: {deck: this.props.deck}}}>Here</Link> to add cards!</h3></span>\n                    <span>{this.props.deck.cards.length} Cards</span> - <span>{this.props.deck.cards.reduce(landCount, 0)} Lands</span>\n\n                </div>\n                : <p>Please <Link to='/'>login</Link> to view a deck!</p>\n            }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(DeckSummary))\n","import React, { Component } from 'react'\nimport DeckSummary from './DeckSummary.js'\nimport '../styles/Deck.css'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createDeck } from '../redux'\n\nconst mapStateToProps = (state) => {\n    return { currentUser: state.currentUser, loggedIn: state.loggedIn, decks: state.decks }\n  }\n\nclass Decks extends Component {\n    constructor(props) {\n    super(props)\n    this.state = { loading: true, loggedIn: false, currentUser: {decks: ''}, decks:''}\n    this.handleCreateDeck = this.handleCreateDeck.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target\n        this.setState({\n          [name]: value\n        })\n    }\n    handleCreateDeck(e) {\n        console.log(`Created user deck: ${this.state.deckName}`)\n        e.preventDefault()\n        this.setState(createDeck(this.state.deckName, this.state.deckDescription))\n    }\n\n    render() {\n        if (this.props.loggedIn && !!this.props.currentUser.decks) { \n            return (\n                <div className=\"decks\">\n                    <h4>Your Saved Decks</h4>\n                    {this.props.currentUser.decks.map((deck, i) => {\n                        return <DeckSummary key={deck.name + i} deck={deck} />\n                    })}\n                </div>\n            )\n        } else if (this.props.loggedIn) {\n            return (\n                <div className=\"createDeck\">\n                    <h3>You don't have any decks yet. Build one here to begin.</h3>\n                    <form>\n                        Enter a name for your new deck: \n                        <input placeholder=\"Required\" type=\"text\" name=\"deckName\" value={this.deckName} onChange={this.handleChange} />\n                        <br />\n                        Enter a description:                     \n                        <input placeholder=\"Optional\" type=\"text\" name=\"deckDescription\" value={this.deckDescription} onChange={this.handleChange} />\n                        <button onClick={this.handleCreateDeck}>Create</button>\n                    </form>\n                </div>\n            )\n        } else {\n            return <h3><b>Please <Link to='/'>login</Link> to view decks!</b></h3>\n        }\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Decks))","import React, { Component } from 'react'\nimport { Route } from 'react-router'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n// import '../styles/App.css'\nimport User from './User'\nimport Decks from './Decks'\n\nconst mapStateToProps = (state) => {\n  return { user: state.user }\n}\n\nclass App extends Component {\n  state = { username: this.props.username, loggedIn: this.props.loggedIn, response: ''}\n\n  componentDidMount() {\n    // this.callApi()\n    //   .then(res => this.setState({ response: res.express }))\n    //   .catch(err => console.log(err))\n  }\n\n  // callApi = async () => {\n  //   const response = await fetch('/')\n  //   const body = await response.json();\n\n  //   if (response.status !== 200) throw Error(body.message);\n\n  //   return body;\n  // };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.props.loggedIn ? \n          <Route path='/decks' render={user => <Decks />} />\n          : <User />\n        }  \n        <p>{this.state.response}</p>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App))","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n// import '../styles/Card.css'\nimport { withRouter } from 'react-router-dom'\n\n\nclass Card extends Component {\n\trender() {\n\t\t//const {name, colors, image, description} = this.props.card\n\t\treturn (\n\t\t\t<div >\n\t\t\t{(this.props.card.name) &&\n\t\t\t\t<div id=\"card\" className=\"wrapper\">\n\t\t\t\t\t<h1>{this.props.card.name}</h1>\n\t\t\t\t\t<h2>{this.props.card.colors.join(\", \")}</h2>\n\t\t\t\t\t<img src={this.props.card.image} alt={this.props.card.name} />\n\t\t\t\t\t<p>{this.props.card.description}</p>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default withRouter(connect(prevState => prevState)(Card))","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getCard, addToDeck } from '../redux'\nimport User from './User'\nimport { withRouter } from 'react-router-dom'\n\n\nclass SearchCards extends Component {\n    constructor() {\n        super()\n        this.types = [  \n            \"Artifact\",\n            \"Conspiracy\",\n            \"Creature\",\n            \"Enchantment\",\n            \"Instant\",\n            \"Land\",\n            \"Phenomenon\",\n            \"Plane\",\n            \"Planeswalker\",\n            \"Scheme\",\n            \"Sorcery\",\n            \"Tribal\",\n            \"Vanguard\"\n          ]\n        this.state = { name: '', colors: '', cardType: '', showLogin: false }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.showLogin = this.showLogin.bind(this)\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    handleSubmit(e) {\n        alert('Your favorite flavor is: ' + this.state.colors);\n        e.preventDefault();\n    }\n    showLogin() {\n        this.setState({showLogin: true})\n    }\n    render() {\n        return (\n            <div id=\"cardSearch\">\n                <form>\n                <label>Color:</label>\n                    <select name=\"colors\" value={this.state.colors} onChange={this.handleChange}>\n                        <option value=\"\">Any</option>\n                        <option value=\"White\">White</option>\n                        <option value=\"Black\">Black</option>\n                        <option value=\"Blue\">Blue</option>\n                        <option value=\"Red\">Red</option>\n                        <option value=\"Green\">Green</option>\n                    </select>\n                    <label>Type:</label>\n                    <select name=\"cardType\" value={this.state.cardType} onChange={this.handleChange}>\n                        <option value=\"\">Any</option>\n                        {this.types.map((type, i) => <option key={type + i} value={type}>{type}</option>)}\n                    </select>\n                    <br />\n                    <label>Name:</label>\n                    <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}/>\n                </form>\n                <button id=\"find-card-button\" onClick={getCard({name: \"name\", value: this.state.name}, {name:\"colors\", value:this.state.colors}, {name:\"type\", value: this.state.cardType})}>Generate Card</button>\n                <br />\n                {this.props.loggedIn ? <button id=\"deck-button\" onClick={addToDeck(this.props.foundCard, this.props.deckId)}>I want it!</button> : (this.state.showLogin) ? <User /> : <h4>Please <a onClick={this.showLogin}>login</a> to create decks and play!</h4>}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getCard: search => {\n            dispatch(getCard(search))\n        },\n        addToDeck: () => {\n            dispatch(addToDeck)\n        } \n    }\n}\n\nexport default withRouter(connect(prevState => prevState, mapDispatchToProps)(SearchCards))","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { saveDeckToDB } from '../redux'\nimport '../styles/Deck.css'\nimport { Link, withRouter } from 'react-router-dom'\nimport Card from './Card'\nimport SearchCards from './SearchCards'\n\nconst mapStateToProps = state => {\n    return { currentUser: state.currentUser, loggedIn: state.loggedIn, foundCard: state.foundCard }\n}\n\nconst landCount = (count, curr) => {\n    if (curr.types.includes(\"Land\"))\n        count++\n    return count\n}\nconst creatureCount = (count, curr) => {\n    if (curr.types.includes(\"Creature\"))\n        count++\n    return count\n}\n\nclass Deck extends Component {\n\n    render() {\n        console.log(\"Props: \", this.props)\n        console.log(\"State: \", this.props.location.state)\n        let deck = {}\n        if (this.props.loggedIn === true) {\n            const deckId = this.props.location.state.deck._id\n            deck = this.props.currentUser.decks.filter(deck => deck._id === deckId)[0]\n        }\n        return (\n            <div className=\"deck\">\n            {this.props.loggedIn ?\n                <div className=\"searchWithDeck\">\n                    <div className=\"searchDetails\">\n                        <SearchCards deckId={deck._id} />\n                    </div>\n                    <div className=\"cardDetails\">\n                        <div className=\"cardGrid\">\n                            <div id=\"leftInfo\">\n                            {console.log('finded cards: ', this.props.foundCard)}\n                                \n                            </div>\n                            <Card card={this.props.foundCard} />\n                            <div id=\"rightInfo\">{this.props.foundCard.text}</div>\n                        </div>\n                    </div>\n                    <div className=\"deckDetails\">\n                        <h1>{deck.name}</h1>\n                        <span>{deck.cards.length} Cards</span> -\n                        <span>{deck.cards.reduce(landCount, 0)} Lands</span> -\n                        <span>{deck.cards.reduce(creatureCount, 0)} Creatures</span>\n                        <br />\n                        <br />\n                        <span><button onClick={saveDeckToDB()}>Save</button></span>\n\n                        <div className=\"viewOfDeck\">\n                            {deck.cards.map((card, i) => {\n                                return <Card key={card.name + i} card={card} />\n                            })}\n                        </div>\n                    </div>\n                </div>\n                : <p className=\"loginNote\">Please <Link to='/'>login</Link> to view a deck!</p>\n            }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Deck))\n\n","import React from 'react';\nimport { render } from 'react-dom';\n\n//ROUTER\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n//REDUX\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\n\nimport Nav from './components/Nav';\nimport App from './components/App';\n// import SearchCards from './components/SearchCards';\nimport Decks from './components/Decks';\nimport Deck from './components/Deck';\n\nimport './styles/index.css';\n\nrender(\n    <BrowserRouter>\n      <Provider store={store}>      \n        <div> \n          <Nav />\n          <Switch>\n            <Route path=\"/\" exact component={App} />\n            <Route path=\"/decks\" render={Decks} />\n            <Route path=\"/deck\" component={Deck} />\n          </Switch>\n        </div>\n      </Provider>\n    </BrowserRouter>\n  , document.getElementById(\"root\"));"],"sourceRoot":""}