{"map":"{\"version\":3,\"sources\":[\"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/redux/index.js\",\"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/Nav.js\",\"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/LoginBox.js\",\"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/User.js\",\"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/DeckSummary.js\",\"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/Decks.js\",\"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/App.js\",\"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/Card.js\",\"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/SearchCards.js\",\"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/Deck.js\",\"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/index.js\"],\"names\":[\"initialState\",\"deck\",\"foundCard\",\"name\",\"colors\",\"loading\",\"currentUser\",\"username\",\"decks\",\"loggedIn\",\"store\",\"createStore\",\"prevState\",\"arguments\",\"length\",\"undefined\",\"action\",\"type\",\"Object\",\"objectSpread\",\"card\",\"console\",\"log\",\"cards\",\"map\",\"_id\",\"deck_id\",\"toConsumableArray\",\"concat\",\"user\",\"applyMiddleware\",\"thunk\",\"subscribe\",\"getState\",\"getCard\",\"url\",\"_len\",\"args\",\"Array\",\"_key\",\"arg\",\"value\",\"dispatch\",\"axios\",\"get\",\"then\",\"response\",\"data\",\"id\",\"manaCost\",\"types\",\"description\",\"text\",\"power\",\"toughness\",\"image\",\"imageUrl\",\"addToDeck\",\"deckId\",\"createUser\",\"post\",\"logout\",\"Nav\",\"state\",\"this\",\"setState\",\"props\",\"react_default\",\"a\",\"createElement\",\"Link\",\"to\",\"onClick\",\"Component\",\"withRouter\",\"connect\",\"LoginBox\",\"loggedIN\",\"onChange\",\"handleChange\",\"handleLogin\",\"User\",\"_this\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"bind\",\"assertThisInitialized\",\"handleCreateUsername\",\"e\",\"_e$target\",\"target\",\"defineProperty\",\"preventDefault\",\"Redirect\",\"className\",\"handleLogout\",\"components_LoginBox\",\"landCount\",\"count\",\"curr\",\"includes\",\"DeckSummary\",\"pathname\",\"reduce\",\"Decks\",\"handleCreateDeck\",\"deckName\",\"deckDescription\",\"user_id\",\"i\",\"components_DeckSummary\",\"key\",\"placeholder\",\"App\",\"es_Route\",\"path\",\"render\",\"components_Decks\",\"components_User\",\"Card\",\"join\",\"src\",\"alt\",\"SearchCards\",\"cardType\",\"showLogin\",\"handleSubmit\",\"alert\",\"search\",\"creatureCount\",\"Deck\",\"location\",\"filter\",\"components_SearchCards\",\"components_Card\",\"put\",\"saveDeckToDB\",\"BrowserRouter\",\"es\",\"components_Nav\",\"Switch\",\"Route\",\"exact\",\"component\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"import { createStore, applyMiddleware } from \\\"redux\\\"\\nimport axios from \\\"axios\\\"\\nimport thunk from \\\"redux-thunk\\\"\\n\\n// const baseUrl = process.env.BASE_URL\\n\\nconst initialState = {\\n    deck: \\\"\\\",\\n    foundCard: {\\n        name: \\\"\\\",\\n        colors: [],\\n\\n    },\\n    loading: false,\\n    currentUser: {\\n        username: '', \\n        decks: []\\n    },\\n    loggedIn: false\\n}\\n\\nconst reducer = (prevState = initialState, action) => {\\n    switch (action.type) {\\n        case \\\"START_LOADING\\\":\\n            return {\\n                ...prevState,\\n                loading: true\\n            }\\n        case \\\"GET_CARD\\\":\\n            return {\\n                ...prevState,\\n                foundCard: action.card,\\n                loading: false\\n            }\\n        case \\\"CREATE_DECK\\\":\\n            return {\\n                ...prevState,\\n                deck: action.deck\\n            }\\n        case \\\"ADD_TO_DECK\\\":\\n            console.log(\\\"PrevState: \\\", prevState.currentUser.decks[0].cards)\\n            return {\\n                ...prevState,\\n                currentUser: { \\n                    ...prevState.currentUser, \\n                    decks: prevState.currentUser.decks.map(\\n                        (deck) => deck._id === action.deck_id ? {...deck, cards: [...deck.cards, action.card]}\\n                        : deck\\n                    )\\n                },\\n                loading: false\\n            }\\n        case \\\"SAVE_DECK\\\":\\n            return {\\n                ...prevState,\\n                decks: action.decks\\n            }\\n        case \\\"LOGIN\\\":\\n            return {\\n                ...prevState,\\n                loggedIn: true,\\n                currentUser: {...prevState.user, ...action.user},\\n                loading: false \\n            }\\n        case \\\"LOGOUT\\\":\\n            return {\\n                ...prevState,\\n                loggedIn: false,\\n                currentUser: {username: ''},\\n                loading: false \\n            }\\n        case \\\"CREATE_USER\\\":\\n            return {\\n                ...prevState,\\n                username: action.user,\\n                decks: [],\\n                loading: false\\n            }\\n        default:\\n            return prevState;\\n    }\\n}\\n\\nconst store = createStore(reducer, applyMiddleware(thunk));\\n\\nstore.subscribe(() => console.log(store.getState()));\\n\\n//ACTION CREATORS\\n\\nexport const getCard = (...args) => {\\n    let url = \\\"https://api.magicthegathering.io/v1/cards?random=true&pageSize=1\\\"\\n    if (args) {\\n        args.map(arg => {\\n            return url += \\\"&\\\" + arg.name + \\\"=\\\" + arg.value\\n        })\\n    }\\n    return dispatch => {\\n        console.log(\\\"dis: \\\", dispatch)\\n        //DO THE PROMISE STUFF\\n        store.dispatch({type: \\\"START_LOADING\\\"});\\n        axios.get(url)\\n            .then(response => {\\n                let card = {}\\n                if (response.data.cards.length > 0){\\n                    card = {\\n                        id: response.data.cards[0].id,\\n                        name: response.data.cards[0].name,\\n                        colors: response.data.cards[0].colors || [],\\n                        manaCost: response.data.cards[0].manaCost,\\n                        types: response.data.cards[0].types,\\n                        description: response.data.cards[0].text,\\n                        power: response.data.cards[0].power,\\n                        toughness: response.data.cards[0].toughness,\\n                        image: response.data.cards[0].imageUrl\\n                    }\\n                }\\n                store.dispatch({\\n                    type: \\\"GET_CARD\\\",\\n                    card: card\\n                })\\n            })\\n    }\\n}\\nexport const addToDeck = (card, deckId) => {\\n    console.log(\\\"Card: \\\", card, \\\" DECK ID: \\\", deckId)\\n    return dispatch => {\\n        store.dispatch({\\n            type: \\\"ADD_TO_DECK\\\",\\n            card: card,\\n            deck_id: deckId\\n        })\\n    }\\n}\\n\\nexport const createUser = (username) => {\\n    return dispatch => {\\n        axios.post('/api/v1/users/', {username: username})\\n            .then(response => {\\n                if (response) {\\n                    store.dispatch({\\n                        type: \\\"LOGIN\\\",\\n                        user: response.data\\n                    })\\n                }\\n            })\\n    }\\n}\\n\\nexport const login = (user) => {\\n    return dispatch => {\\n        axios.post('/api/v1/users/login', {user: { username: user }})\\n            .then(response => {\\n                if (response) {\\n                    store.dispatch({\\n                        type: \\\"LOGIN\\\",\\n                        user: response.data\\n                    })\\n                } else {\\n                    return user\\n                }\\n                console.log(response.data)\\n        })\\n    }\\n}\\n\\nexport const logout = () => {\\n    return dispatch => {\\n        store.dispatch({\\n            type: \\\"LOGOUT\\\"\\n        })\\n    }\\n}\\n\\nexport const createDeck = (name, description) => {\\n    return dispatch => {\\n        axios.post('/api/v1/decks', { deck: { name: name, description: description, user_id: store.getState().currentUser.id }})\\n            .then(response => {\\n                if (response) {\\n                    store.dispatch({\\n                        type: \\\"CREATE_DECK\\\",\\n                        deck: response.data\\n                    })\\n                } else {\\n                    console.log(response.data)\\n                }\\n            })\\n    }\\n}\\n\\nexport const saveDeckToDB = (deck, cards) => {\\n    return dispatch => {\\n        axios.put('/api/v1/decks/'+ deck.id, { deck: { cards: [...deck.cards, ...cards] }})\\n            .then(response => {\\n                if (response) {\\n                    store.dispatch({\\n                        type: \\\"SAVE_DECK\\\",\\n                        decks: response.data\\n                    })\\n                }\\n            })\\n    }\\n}\\n\\n\\nexport default store;\\n\",\"import React, { Component } from 'react'\\nimport { connect } from 'react-redux'\\nimport { Link, withRouter } from 'react-router-dom'\\nimport { logout } from '../redux'\\nimport '../styles/Nav.css'\\n\\nclass Nav extends Component {\\n  state = { loading: true, loggedIn: false, currentUser: ''}\\n\\n  async componentDidMount() {\\n    this.setState = {loading: false, currentUser: this.props.currentUser, loggedIn: this.props.loggedIn}\\n  }\\n\\n  render() {\\n    // const displayName = this.props.currentUser.username.replace(/\\\\b/).toUpperCase() + this.props.currentUser.username.replace(/\\\\B/).toLowerCase()\\n    return (\\n          <ul>\\n            <li><Link to=\\\"/\\\"><b>Home</b></Link></li>\\n            {/* <li><Link to=\\\"/card\\\">Search Cards</Link></li> */}\\n            <li></li>\\n            <li><Link to=\\\"/decks\\\"><b>{this.props.currentUser.username}</b></Link></li>\\n            <li>{this.props.loggedIn ? <a onClick={logout()}><b>Logout</b></a> : <Link to=\\\"/\\\"><b>Login</b></Link>}</li>\\n          </ul>\\n    )\\n  }\\n}\\n\\nconst mapDispatchToProps = dispatch => {\\n  return {\\n    logout: () => {\\n      dispatch(logout)\\n    }\\n  }\\n}\\n\\nexport default withRouter(connect(prevState => prevState, mapDispatchToProps)(Nav))\",\"import React, { Component } from 'react';\\nimport '../styles/LoginBox.css';\\n\\nclass LoginBox extends Component {\\n  state = { loggedIN: false };\\n\\n  render() {\\n    return (\\n      <div id=\\\"LoginBox\\\">\\n        <form name=\\\"login\\\">\\n          <input onChange={this.props.handleChange} value={this.username} name=\\\"username\\\" type=\\\"text\\\" />\\n          <button onClick={this.props.handleLogin}>Login</button>\\n          <button onClick={this.props.createUser}>Create Username</button>\\n        </form>\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default LoginBox;\",\"import React, { Component } from 'react';\\nimport { connect } from 'react-redux';\\nimport { login, createUser } from '../redux';\\nimport { Redirect, withRouter } from 'react-router-dom';\\nimport LoginBox from './LoginBox';\\n\\nconst mapStateToProps = (state) => {\\n  return { user: state.user, loggedIn: state.loggedIn }\\n}\\n\\nclass User extends Component {\\n  constructor(props) {\\n    super(props)\\n    this.state = { username: '', loggedIn: false}\\n    this.handleChange = this.handleChange.bind(this)\\n    this.handleLogin = this.handleLogin.bind(this)\\n    this.handleCreateUsername = this.handleCreateUsername.bind(this)\\n  }\\n  handleChange(e) {\\n    const { name, value } = e.target\\n    this.setState({\\n      [name]: value\\n    })\\n  }\\n  handleLogin(e) {\\n    e.preventDefault()\\n    console.log('test')\\n    this.setState(login(this.state.username))\\n  }\\n  handleCreateUsername(e) {\\n    e.preventDefault()\\n    if(this.state.username === /\\\\W?/) {\\n      return <p>Please only use letters, numbers, and underscores. No spaces or special characters. :)</p>\\n    } else {\\n      this.setState(\\n        createUser(this.state.username)\\n      )\\n    }\\n    console.log(`Created user: ${this.state.username}`)\\n  }\\n  render() {\\n    if (this.props.loggedIn === true) {\\n      return <Redirect to=\\\"/decks\\\" />\\n    } \\n    return (\\n      <div className=\\\"user\\\">\\n        {!this.props.loggedIn ?\\n          <LoginBox handleLogin={ this.handleLogin } createUser={ this.handleCreateUsername } handleChange={ this.handleChange } />\\n        : <button onClick={this.handleLogout}>Logout</button>\\n        }\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default withRouter(connect(mapStateToProps, {createUser: createUser})(User))\",\"import React, { Component } from 'react'\\nimport { connect } from 'react-redux'\\nimport '../styles/Deck.css'\\nimport { Link, withRouter } from 'react-router-dom'\\n\\nconst mapStateToProps = state => {\\n    return { user: state.user, loggedIn: state.loggedIn }\\n}\\n\\nconst landCount = (count, curr) => {\\n    if (curr.types.includes(\\\"Land\\\"))\\n        count++\\n    return count\\n}\\n\\nclass DeckSummary extends Component {\\n\\n    render() {\\n        return (\\n            <div className=\\\"deckSummary\\\">\\n            {this.props.loggedIn ?\\n                <div><h2>{this.props.deck.name}</h2>\\n                    <span><h3>Click <Link to={{pathname: '/deck', state: {deck: this.props.deck}}}>Here</Link> to add cards!</h3></span>\\n                    <span>{this.props.deck.cards.length} Cards</span> - <span>{this.props.deck.cards.reduce(landCount, 0)} Lands</span>\\n\\n                </div>\\n                : <p>Please <Link to='/'>login</Link> to view a deck!</p>\\n            }\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default withRouter(connect(mapStateToProps)(DeckSummary))\\n\",\"import React, { Component } from 'react'\\nimport DeckSummary from './DeckSummary.js'\\nimport '../styles/Deck.css'\\nimport { Link, withRouter } from 'react-router-dom'\\nimport { connect } from 'react-redux'\\nimport { createDeck } from '../redux'\\n\\nconst mapStateToProps = (state) => {\\n    return { currentUser: state.currentUser, loggedIn: state.loggedIn, decks: state.decks }\\n  }\\n\\nclass Decks extends Component {\\n    constructor(props) {\\n    super(props)\\n    this.state = { loading: true, loggedIn: false, currentUser: {decks: ''}, decks:''}\\n    this.handleCreateDeck = this.handleCreateDeck.bind(this)\\n    this.handleChange = this.handleChange.bind(this)\\n    }\\n\\n    handleChange(e) {\\n        const { name, value } = e.target\\n        this.setState({\\n          [name]: value\\n        })\\n    }\\n    handleCreateDeck(e) {\\n        console.log(`Created user deck: ${this.state.deckName}`)\\n        e.preventDefault()\\n        this.setState(createDeck(this.state.deckName, this.state.deckDescription))\\n    }\\n\\n    render() {\\n        if (this.props.loggedIn && !!this.props.currentUser.decks) { \\n            return (\\n                <div className=\\\"decks\\\">\\n                    <h4>Your Saved Decks</h4>\\n                    {this.props.currentUser.decks.map((deck, i) => {\\n                        return <DeckSummary key={deck.name + i} deck={deck} />\\n                    })}\\n                </div>\\n            )\\n        } else if (this.props.loggedIn) {\\n            return (\\n                <div className=\\\"createDeck\\\">\\n                    <h3>You don't have any decks yet. Build one here to begin.</h3>\\n                    <form>\\n                        Enter a name for your new deck: \\n                        <input placeholder=\\\"Required\\\" type=\\\"text\\\" name=\\\"deckName\\\" value={this.deckName} onChange={this.handleChange} />\\n                        <br />\\n                        Enter a description:                     \\n                        <input placeholder=\\\"Optional\\\" type=\\\"text\\\" name=\\\"deckDescription\\\" value={this.deckDescription} onChange={this.handleChange} />\\n                        <button onClick={this.handleCreateDeck}>Create</button>\\n                    </form>\\n                </div>\\n            )\\n        } else {\\n            return <h3><b>Please <Link to='/'>login</Link> to view decks!</b></h3>\\n        }\\n    }\\n}\\n\\nexport default withRouter(connect(mapStateToProps)(Decks))\",\"import React, { Component } from 'react'\\nimport { Route } from 'react-router'\\nimport { connect } from 'react-redux'\\nimport { withRouter } from 'react-router-dom'\\n// import '../styles/App.css'\\nimport User from './User'\\nimport Decks from './Decks'\\n\\nconst mapStateToProps = (state) => {\\n  return { user: state.user }\\n}\\n\\nclass App extends Component {\\n  state = { username: this.props.username, loggedIn: this.props.loggedIn, response: ''}\\n\\n  componentDidMount() {\\n    // this.callApi()\\n    //   .then(res => this.setState({ response: res.express }))\\n    //   .catch(err => console.log(err))\\n  }\\n\\n  // callApi = async () => {\\n  //   const response = await fetch('/')\\n  //   const body = await response.json();\\n\\n  //   if (response.status !== 200) throw Error(body.message);\\n\\n  //   return body;\\n  // };\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        {this.props.loggedIn ? \\n          <Route path='/decks' render={user => <Decks />} />\\n          : <User />\\n        }  \\n        <p>{this.state.response}</p>\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default withRouter(connect(mapStateToProps)(App))\",\"import React, { Component } from 'react'\\nimport { connect } from 'react-redux'\\n// import '../styles/Card.css'\\nimport { withRouter } from 'react-router-dom'\\n\\n\\nclass Card extends Component {\\n\\trender() {\\n\\t\\t//const {name, colors, image, description} = this.props.card\\n\\t\\treturn (\\n\\t\\t\\t<div >\\n\\t\\t\\t{(this.props.card.name) &&\\n\\t\\t\\t\\t<div id=\\\"card\\\" className=\\\"wrapper\\\">\\n\\t\\t\\t\\t\\t<h1>{this.props.card.name}</h1>\\n\\t\\t\\t\\t\\t<h2>{this.props.card.colors.join(\\\", \\\")}</h2>\\n\\t\\t\\t\\t\\t<img src={this.props.card.image} alt={this.props.card.name} />\\n\\t\\t\\t\\t\\t<p>{this.props.card.description}</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t}\\n\\t\\t\\t</div>\\n\\t\\t)\\n\\t}\\n}\\n\\nexport default withRouter(connect(prevState => prevState)(Card))\",\"import React, { Component } from 'react'\\nimport { connect } from 'react-redux'\\nimport { getCard, addToDeck } from '../redux'\\nimport User from './User'\\nimport { withRouter } from 'react-router-dom'\\n\\n\\nclass SearchCards extends Component {\\n    constructor() {\\n        super()\\n        this.types = [  \\n            \\\"Artifact\\\",\\n            \\\"Conspiracy\\\",\\n            \\\"Creature\\\",\\n            \\\"Enchantment\\\",\\n            \\\"Instant\\\",\\n            \\\"Land\\\",\\n            \\\"Phenomenon\\\",\\n            \\\"Plane\\\",\\n            \\\"Planeswalker\\\",\\n            \\\"Scheme\\\",\\n            \\\"Sorcery\\\",\\n            \\\"Tribal\\\",\\n            \\\"Vanguard\\\"\\n          ]\\n        this.state = { name: '', colors: '', cardType: '', showLogin: false }\\n        this.handleChange = this.handleChange.bind(this)\\n        this.handleSubmit = this.handleSubmit.bind(this)\\n        this.showLogin = this.showLogin.bind(this)\\n    }\\n    handleChange(e) {\\n        this.setState({ [e.target.name]: e.target.value });\\n    }\\n    handleSubmit(e) {\\n        alert('Your favorite flavor is: ' + this.state.colors);\\n        e.preventDefault();\\n    }\\n    showLogin() {\\n        this.setState({showLogin: true})\\n    }\\n    render() {\\n        return (\\n            <div id=\\\"cardSearch\\\">\\n                <form>\\n                <label>Color:</label>\\n                    <select name=\\\"colors\\\" value={this.state.colors} onChange={this.handleChange}>\\n                        <option value=\\\"\\\">Any</option>\\n                        <option value=\\\"White\\\">White</option>\\n                        <option value=\\\"Black\\\">Black</option>\\n                        <option value=\\\"Blue\\\">Blue</option>\\n                        <option value=\\\"Red\\\">Red</option>\\n                        <option value=\\\"Green\\\">Green</option>\\n                    </select>\\n                    <label>Type:</label>\\n                    <select name=\\\"cardType\\\" value={this.state.cardType} onChange={this.handleChange}>\\n                        <option value=\\\"\\\">Any</option>\\n                        {this.types.map((type, i) => <option key={type + i} value={type}>{type}</option>)}\\n                    </select>\\n                    <br />\\n                    <label>Name:</label>\\n                    <input type=\\\"text\\\" name=\\\"name\\\" value={this.state.name} onChange={this.handleChange}/>\\n                </form>\\n                <button id=\\\"find-card-button\\\" onClick={getCard({name: \\\"name\\\", value: this.state.name}, {name:\\\"colors\\\", value:this.state.colors}, {name:\\\"type\\\", value: this.state.cardType})}>Generate Card</button>\\n                <br />\\n                {this.props.loggedIn ? <button id=\\\"deck-button\\\" onClick={addToDeck(this.props.foundCard, this.props.deckId)}>I want it!</button> : (this.state.showLogin) ? <User /> : <h4>Please <a onClick={this.showLogin}>login</a> to create decks and play!</h4>}\\n            </div>\\n        )\\n    }\\n}\\n\\nconst mapDispatchToProps = dispatch => {\\n    return {\\n        getCard: search => {\\n            dispatch(getCard(search))\\n        },\\n        addToDeck: () => {\\n            dispatch(addToDeck)\\n        } \\n    }\\n}\\n\\nexport default withRouter(connect(prevState => prevState, mapDispatchToProps)(SearchCards))\",\"import React, { Component } from 'react'\\nimport { connect } from 'react-redux'\\nimport { saveDeckToDB } from '../redux'\\nimport '../styles/Deck.css'\\nimport { Link, withRouter } from 'react-router-dom'\\nimport Card from './Card'\\nimport SearchCards from './SearchCards'\\n\\nconst mapStateToProps = state => {\\n    return { currentUser: state.currentUser, loggedIn: state.loggedIn, foundCard: state.foundCard }\\n}\\n\\nconst landCount = (count, curr) => {\\n    if (curr.types.includes(\\\"Land\\\"))\\n        count++\\n    return count\\n}\\nconst creatureCount = (count, curr) => {\\n    if (curr.types.includes(\\\"Creature\\\"))\\n        count++\\n    return count\\n}\\n\\nclass Deck extends Component {\\n\\n    render() {\\n        console.log(\\\"Props: \\\", this.props)\\n        console.log(\\\"State: \\\", this.props.location.state)\\n        let deck = {}\\n        if (this.props.loggedIn === true) {\\n            const deckId = this.props.location.state.deck._id\\n            deck = this.props.currentUser.decks.filter(deck => deck._id === deckId)[0]\\n        }\\n        return (\\n            <div className=\\\"deck\\\">\\n            {this.props.loggedIn ?\\n                <div className=\\\"searchWithDeck\\\">\\n                    <div className=\\\"searchDetails\\\">\\n                        <SearchCards deckId={deck._id} />\\n                    </div>\\n                    <div className=\\\"cardDetails\\\">\\n                        <div className=\\\"cardGrid\\\">\\n                            <div id=\\\"leftInfo\\\">\\n                            {console.log('finded cards: ', this.props.foundCard)}\\n                                \\n                            </div>\\n                            <Card card={this.props.foundCard} />\\n                            <div id=\\\"rightInfo\\\">{this.props.foundCard.text}</div>\\n                        </div>\\n                    </div>\\n                    <div className=\\\"deckDetails\\\">\\n                        <h1>{deck.name}</h1>\\n                        <span>{deck.cards.length} Cards</span> -\\n                        <span>{deck.cards.reduce(landCount, 0)} Lands</span> -\\n                        <span>{deck.cards.reduce(creatureCount, 0)} Creatures</span>\\n                        <br />\\n                        <br />\\n                        <span><button onClick={saveDeckToDB()}>Save</button></span>\\n\\n                        <div className=\\\"viewOfDeck\\\">\\n                            {deck.cards.map((card, i) => {\\n                                return <Card key={card.name + i} card={card} />\\n                            })}\\n                        </div>\\n                    </div>\\n                </div>\\n                : <p className=\\\"loginNote\\\">Please <Link to='/'>login</Link> to view a deck!</p>\\n            }\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default withRouter(connect(mapStateToProps)(Deck))\\n\\n\",\"import React from 'react';\\nimport { render } from 'react-dom';\\n\\n//ROUTER\\nimport { BrowserRouter, Switch, Route } from \\\"react-router-dom\\\";\\n\\n//REDUX\\nimport { Provider } from \\\"react-redux\\\";\\nimport store from \\\"./redux\\\";\\n\\nimport Nav from './components/Nav';\\nimport App from './components/App';\\n// import SearchCards from './components/SearchCards';\\nimport Decks from './components/Decks';\\nimport Deck from './components/Deck';\\n\\nimport './styles/index.css';\\n\\nrender(\\n    <BrowserRouter>\\n      <Provider store={store}>      \\n        <div> \\n          <Nav />\\n          <Switch>\\n            <Route path=\\\"/\\\" exact component={App} />\\n            <Route path=\\\"/decks\\\" render={Decks} />\\n            <Route path=\\\"/deck\\\" component={Deck} />\\n          </Switch>\\n        </div>\\n      </Provider>\\n    </BrowserRouter>\\n  , document.getElementById(\\\"root\\\"));\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{23:function(e,t,a){},40:function(e,t,a){e.exports=a(79)},71:function(e,t,a){},74:function(e,t,a){},77:function(e,t,a){},79:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),c=a(34),l=a(84),s=a(86),o=a(82),i=a(7),u=a(21),d=a(13),h=a(18),m=a(17),p=a.n(m),g=a(37),b={deck:\"\",foundCard:{name:\"\",colors:[]},loading:!1,currentUser:{username:\"\",decks:[]},loggedIn:!1},E=Object(h.c)(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:b,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"START_LOADING\":return Object(d.a)({},e,{loading:!0});case\"GET_CARD\":return Object(d.a)({},e,{foundCard:t.card,loading:!1});case\"CREATE_DECK\":return Object(d.a)({},e,{deck:t.deck});case\"ADD_TO_DECK\":return console.log(\"PrevState: \",e.currentUser.decks[0].cards),Object(d.a)({},e,{currentUser:Object(d.a)({},e.currentUser,{decks:e.currentUser.decks.map(function(e){return e._id===t.deck_id?Object(d.a)({},e,{cards:Object(u.a)(e.cards).concat([t.card])}):e})}),loading:!1});case\"SAVE_DECK\":return Object(d.a)({},e,{decks:t.decks});case\"LOGIN\":return Object(d.a)({},e,{loggedIn:!0,currentUser:Object(d.a)({},e.user,t.user),loading:!1});case\"LOGOUT\":return Object(d.a)({},e,{loggedIn:!1,currentUser:{username:\"\"},loading:!1});case\"CREATE_USER\":return Object(d.a)({},e,{username:t.user,decks:[],loading:!1});default:return e}},Object(h.a)(g.a));E.subscribe(function(){return console.log(E.getState())});var f=function(){for(var e=\"https://api.magicthegathering.io/v1/cards?random=true&pageSize=1\",t=arguments.length,a=new Array(t),n=0;n<t;n++)a[n]=arguments[n];return a&&a.map(function(t){return e+=\"&\"+t.name+\"=\"+t.value}),function(t){console.log(\"dis: \",t),E.dispatch({type:\"START_LOADING\"}),p.a.get(e).then(function(e){var t={};e.data.cards.length>0&&(t={id:e.data.cards[0].id,name:e.data.cards[0].name,colors:e.data.cards[0].colors||[],manaCost:e.data.cards[0].manaCost,types:e.data.cards[0].types,description:e.data.cards[0].text,power:e.data.cards[0].power,toughness:e.data.cards[0].toughness,image:e.data.cards[0].imageUrl}),E.dispatch({type:\"GET_CARD\",card:t})})}},O=function(e,t){return console.log(\"Card: \",e,\" DECK ID: \",t),function(a){E.dispatch({type:\"ADD_TO_DECK\",card:e,deck_id:t})}},k=function(e){return function(t){p.a.post(\"/api/v1/users/\",{username:e}).then(function(e){e&&E.dispatch({type:\"LOGIN\",user:e.data})})}},v=function(){return function(e){E.dispatch({type:\"LOGOUT\"})}},j=E,C=a(26),y=a.n(C),I=a(38),D=a(4),U=a(5),L=a(8),w=a(6),N=a(9),S=a(81),A=a(85),T=(a(71),function(e){function t(){var e,a;Object(D.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(L.a)(this,(e=Object(w.a)(t)).call.apply(e,[this].concat(r)))).state={loading:!0,loggedIn:!1,currentUser:\"\"},a}return Object(N.a)(t,e),Object(U.a)(t,[{key:\"componentDidMount\",value:function(){var e=Object(I.a)(y.a.mark(function e(){return y.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:this.setState={loading:!1,currentUser:this.props.currentUser,loggedIn:this.props.loggedIn};case 1:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:\"render\",value:function(){return r.a.createElement(\"ul\",null,r.a.createElement(\"li\",null,r.a.createElement(S.a,{to:\"/\"},r.a.createElement(\"b\",null,\"Home\"))),r.a.createElement(\"li\",null),r.a.createElement(\"li\",null,r.a.createElement(S.a,{to:\"/decks\"},r.a.createElement(\"b\",null,this.props.currentUser.username))),r.a.createElement(\"li\",null,this.props.loggedIn?r.a.createElement(\"a\",{onClick:v()},r.a.createElement(\"b\",null,\"Logout\")):r.a.createElement(S.a,{to:\"/\"},r.a.createElement(\"b\",null,\"Login\"))))}}]),t}(n.Component)),_=Object(A.a)(Object(i.b)(function(e){return e},function(e){return{logout:function(){e(v)}}})(T)),G=a(33),R=a(15),x=a(2),P=a(83),B=(a(74),function(e){function t(){var e,a;Object(D.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(L.a)(this,(e=Object(w.a)(t)).call.apply(e,[this].concat(r)))).state={loggedIN:!1},a}return Object(N.a)(t,e),Object(U.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{id:\"LoginBox\"},r.a.createElement(\"form\",{name:\"login\"},r.a.createElement(\"input\",{onChange:this.props.handleChange,value:this.username,name:\"username\",type:\"text\"}),r.a.createElement(\"button\",{onClick:this.props.handleLogin},\"Login\"),r.a.createElement(\"button\",{onClick:this.props.createUser},\"Create Username\")))}}]),t}(n.Component)),K=function(e){function t(e){var a;return Object(D.a)(this,t),(a=Object(L.a)(this,Object(w.a)(t).call(this,e))).state={username:\"\",loggedIn:!1},a.handleChange=a.handleChange.bind(Object(x.a)(Object(x.a)(a))),a.handleLogin=a.handleLogin.bind(Object(x.a)(Object(x.a)(a))),a.handleCreateUsername=a.handleCreateUsername.bind(Object(x.a)(Object(x.a)(a))),a}return Object(N.a)(t,e),Object(U.a)(t,[{key:\"handleChange\",value:function(e){var t=e.target,a=t.name,n=t.value;this.setState(Object(R.a)({},a,n))}},{key:\"handleLogin\",value:function(e){var t;e.preventDefault(),console.log(\"test\"),this.setState((t=this.state.username,function(e){p.a.post(\"/api/v1/users/login\",{user:{username:t}}).then(function(e){if(!e)return t;E.dispatch({type:\"LOGIN\",user:e.data}),console.log(e.data)})}))}},{key:\"handleCreateUsername\",value:function(e){if(e.preventDefault(),this.state.username===/\\W?/)return r.a.createElement(\"p\",null,\"Please only use letters, numbers, and underscores. No spaces or special characters. :)\");this.setState(k(this.state.username)),console.log(\"Created user: \".concat(this.state.username))}},{key:\"render\",value:function(){return!0===this.props.loggedIn?r.a.createElement(P.a,{to:\"/decks\"}):r.a.createElement(\"div\",{className:\"user\"},this.props.loggedIn?r.a.createElement(\"button\",{onClick:this.handleLogout},\"Logout\"):r.a.createElement(B,{handleLogin:this.handleLogin,createUser:this.handleCreateUsername,handleChange:this.handleChange}))}}]),t}(n.Component),W=Object(A.a)(Object(i.b)(function(e){return{user:e.user,loggedIn:e.loggedIn}},{createUser:k})(K)),V=(a(23),function(e,t){return t.types.includes(\"Land\")&&e++,e}),Y=function(e){function t(){return Object(D.a)(this,t),Object(L.a)(this,Object(w.a)(t).apply(this,arguments))}return Object(N.a)(t,e),Object(U.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"deckSummary\"},this.props.loggedIn?r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,this.props.deck.name),r.a.createElement(\"span\",null,r.a.createElement(\"h3\",null,\"Click \",r.a.createElement(S.a,{to:{pathname:\"/deck\",state:{deck:this.props.deck}}},\"Here\"),\" to add cards!\")),r.a.createElement(\"span\",null,this.props.deck.cards.length,\" Cards\"),\" - \",r.a.createElement(\"span\",null,this.props.deck.cards.reduce(V,0),\" Lands\")):r.a.createElement(\"p\",null,\"Please \",r.a.createElement(S.a,{to:\"/\"},\"login\"),\" to view a deck!\"))}}]),t}(n.Component),H=Object(A.a)(Object(i.b)(function(e){return{user:e.user,loggedIn:e.loggedIn}})(Y)),J=function(e){function t(e){var a;return Object(D.a)(this,t),(a=Object(L.a)(this,Object(w.a)(t).call(this,e))).state={loading:!0,loggedIn:!1,currentUser:{decks:\"\"},decks:\"\"},a.handleCreateDeck=a.handleCreateDeck.bind(Object(x.a)(Object(x.a)(a))),a.handleChange=a.handleChange.bind(Object(x.a)(Object(x.a)(a))),a}return Object(N.a)(t,e),Object(U.a)(t,[{key:\"handleChange\",value:function(e){var t=e.target,a=t.name,n=t.value;this.setState(Object(R.a)({},a,n))}},{key:\"handleCreateDeck\",value:function(e){var t,a;console.log(\"Created user deck: \".concat(this.state.deckName)),e.preventDefault(),this.setState((t=this.state.deckName,a=this.state.deckDescription,function(e){p.a.post(\"/api/v1/decks\",{deck:{name:t,description:a,user_id:E.getState().currentUser.id}}).then(function(e){e?E.dispatch({type:\"CREATE_DECK\",deck:e.data}):console.log(e.data)})}))}},{key:\"render\",value:function(){return this.props.loggedIn&&this.props.currentUser.decks?r.a.createElement(\"div\",{className:\"decks\"},r.a.createElement(\"h4\",null,\"Your Saved Decks\"),this.props.currentUser.decks.map(function(e,t){return r.a.createElement(H,{key:e.name+t,deck:e})})):this.props.loggedIn?r.a.createElement(\"div\",{className:\"createDeck\"},r.a.createElement(\"h3\",null,\"You don't have any decks yet. Build one here to begin.\"),r.a.createElement(\"form\",null,\"Enter a name for your new deck:\",r.a.createElement(\"input\",{placeholder:\"Required\",type:\"text\",name:\"deckName\",value:this.deckName,onChange:this.handleChange}),r.a.createElement(\"br\",null),\"Enter a description:\",r.a.createElement(\"input\",{placeholder:\"Optional\",type:\"text\",name:\"deckDescription\",value:this.deckDescription,onChange:this.handleChange}),r.a.createElement(\"button\",{onClick:this.handleCreateDeck},\"Create\"))):r.a.createElement(\"h3\",null,r.a.createElement(\"b\",null,\"Please \",r.a.createElement(S.a,{to:\"/\"},\"login\"),\" to view decks!\"))}}]),t}(n.Component),M=Object(A.a)(Object(i.b)(function(e){return{currentUser:e.currentUser,loggedIn:e.loggedIn,decks:e.decks}})(J)),q=function(e){function t(){var e,a;Object(D.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(L.a)(this,(e=Object(w.a)(t)).call.apply(e,[this].concat(r)))).state={username:a.props.username,loggedIn:a.props.loggedIn,response:\"\"},a}return Object(N.a)(t,e),Object(U.a)(t,[{key:\"componentDidMount\",value:function(){}},{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},this.props.loggedIn?r.a.createElement(G.a,{path:\"/decks\",render:function(e){return r.a.createElement(M,null)}}):r.a.createElement(W,null),r.a.createElement(\"p\",null,this.state.response))}}]),t}(n.Component),z=Object(A.a)(Object(i.b)(function(e){return{user:e.user}})(q)),F=function(e){function t(){return Object(D.a)(this,t),Object(L.a)(this,Object(w.a)(t).apply(this,arguments))}return Object(N.a)(t,e),Object(U.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,this.props.card.name&&r.a.createElement(\"div\",{id:\"card\",className:\"wrapper\"},r.a.createElement(\"h1\",null,this.props.card.name),r.a.createElement(\"h2\",null,this.props.card.colors.join(\", \")),r.a.createElement(\"img\",{src:this.props.card.image,alt:this.props.card.name}),r.a.createElement(\"p\",null,this.props.card.description)))}}]),t}(n.Component),Q=Object(A.a)(Object(i.b)(function(e){return e})(F)),X=function(e){function t(){var e;return Object(D.a)(this,t),(e=Object(L.a)(this,Object(w.a)(t).call(this))).types=[\"Artifact\",\"Conspiracy\",\"Creature\",\"Enchantment\",\"Instant\",\"Land\",\"Phenomenon\",\"Plane\",\"Planeswalker\",\"Scheme\",\"Sorcery\",\"Tribal\",\"Vanguard\"],e.state={name:\"\",colors:\"\",cardType:\"\",showLogin:!1},e.handleChange=e.handleChange.bind(Object(x.a)(Object(x.a)(e))),e.handleSubmit=e.handleSubmit.bind(Object(x.a)(Object(x.a)(e))),e.showLogin=e.showLogin.bind(Object(x.a)(Object(x.a)(e))),e}return Object(N.a)(t,e),Object(U.a)(t,[{key:\"handleChange\",value:function(e){this.setState(Object(R.a)({},e.target.name,e.target.value))}},{key:\"handleSubmit\",value:function(e){alert(\"Your favorite flavor is: \"+this.state.colors),e.preventDefault()}},{key:\"showLogin\",value:function(){this.setState({showLogin:!0})}},{key:\"render\",value:function(){return r.a.createElement(\"div\",{id:\"cardSearch\"},r.a.createElement(\"form\",null,r.a.createElement(\"label\",null,\"Color:\"),r.a.createElement(\"select\",{name:\"colors\",value:this.state.colors,onChange:this.handleChange},r.a.createElement(\"option\",{value:\"\"},\"Any\"),r.a.createElement(\"option\",{value:\"White\"},\"White\"),r.a.createElement(\"option\",{value:\"Black\"},\"Black\"),r.a.createElement(\"option\",{value:\"Blue\"},\"Blue\"),r.a.createElement(\"option\",{value:\"Red\"},\"Red\"),r.a.createElement(\"option\",{value:\"Green\"},\"Green\")),r.a.createElement(\"label\",null,\"Type:\"),r.a.createElement(\"select\",{name:\"cardType\",value:this.state.cardType,onChange:this.handleChange},r.a.createElement(\"option\",{value:\"\"},\"Any\"),this.types.map(function(e,t){return r.a.createElement(\"option\",{key:e+t,value:e},e)})),r.a.createElement(\"br\",null),r.a.createElement(\"label\",null,\"Name:\"),r.a.createElement(\"input\",{type:\"text\",name:\"name\",value:this.state.name,onChange:this.handleChange})),r.a.createElement(\"button\",{id:\"find-card-button\",onClick:f({name:\"name\",value:this.state.name},{name:\"colors\",value:this.state.colors},{name:\"type\",value:this.state.cardType})},\"Generate Card\"),r.a.createElement(\"br\",null),this.props.loggedIn?r.a.createElement(\"button\",{id:\"deck-button\",onClick:O(this.props.foundCard,this.props.deckId)},\"I want it!\"):this.state.showLogin?r.a.createElement(W,null):r.a.createElement(\"h4\",null,\"Please \",r.a.createElement(\"a\",{onClick:this.showLogin},\"login\"),\" to create decks and play!\"))}}]),t}(n.Component),Z=Object(A.a)(Object(i.b)(function(e){return e},function(e){return{getCard:function(t){e(f(t))},addToDeck:function(){e(O)}}})(X)),$=function(e,t){return t.types.includes(\"Land\")&&e++,e},ee=function(e,t){return t.types.includes(\"Creature\")&&e++,e},te=function(e){function t(){return Object(D.a)(this,t),Object(L.a)(this,Object(w.a)(t).apply(this,arguments))}return Object(N.a)(t,e),Object(U.a)(t,[{key:\"render\",value:function(){console.log(\"Props: \",this.props),console.log(\"State: \",this.props.location.state);var e={};if(!0===this.props.loggedIn){var t=this.props.location.state.deck._id;e=this.props.currentUser.decks.filter(function(e){return e._id===t})[0]}return r.a.createElement(\"div\",{className:\"deck\"},this.props.loggedIn?r.a.createElement(\"div\",{className:\"searchWithDeck\"},r.a.createElement(\"div\",{className:\"searchDetails\"},r.a.createElement(Z,{deckId:e._id})),r.a.createElement(\"div\",{className:\"cardDetails\"},r.a.createElement(\"div\",{className:\"cardGrid\"},r.a.createElement(\"div\",{id:\"leftInfo\"},console.log(\"finded cards: \",this.props.foundCard)),r.a.createElement(Q,{card:this.props.foundCard}),r.a.createElement(\"div\",{id:\"rightInfo\"},this.props.foundCard.text))),r.a.createElement(\"div\",{className:\"deckDetails\"},r.a.createElement(\"h1\",null,e.name),r.a.createElement(\"span\",null,e.cards.length,\" Cards\"),\" -\",r.a.createElement(\"span\",null,e.cards.reduce($,0),\" Lands\"),\" -\",r.a.createElement(\"span\",null,e.cards.reduce(ee,0),\" Creatures\"),r.a.createElement(\"br\",null),r.a.createElement(\"br\",null),r.a.createElement(\"span\",null,r.a.createElement(\"button\",{onClick:function(e,t){return function(a){p.a.put(\"/api/v1/decks/\"+e.id,{deck:{cards:Object(u.a)(e.cards).concat(Object(u.a)(t))}}).then(function(e){e&&E.dispatch({type:\"SAVE_DECK\",decks:e.data})})}}()},\"Save\")),r.a.createElement(\"div\",{className:\"viewOfDeck\"},e.cards.map(function(e,t){return r.a.createElement(Q,{key:e.name+t,card:e})})))):r.a.createElement(\"p\",{className:\"loginNote\"},\"Please \",r.a.createElement(S.a,{to:\"/\"},\"login\"),\" to view a deck!\"))}}]),t}(n.Component),ae=Object(A.a)(Object(i.b)(function(e){return{currentUser:e.currentUser,loggedIn:e.loggedIn,foundCard:e.foundCard}})(te));a(77);Object(c.render)(r.a.createElement(l.a,null,r.a.createElement(i.a,{store:j},r.a.createElement(\"div\",null,r.a.createElement(_,null),r.a.createElement(s.a,null,r.a.createElement(o.a,{path:\"/\",exact:!0,component:z}),r.a.createElement(o.a,{path:\"/decks\",render:M}),r.a.createElement(o.a,{path:\"/deck\",component:ae}))))),document.getElementById(\"root\"))}},[[40,2,1]]]);","extractedComments":[]}