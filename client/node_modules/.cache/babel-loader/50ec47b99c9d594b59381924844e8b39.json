{"ast":null,"code":"import _defineProperty from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/SearchCards.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getCard as _getCard, addToDeck as _addToDeck } from '../redux';\nimport User from './User';\nimport { withRouter } from 'react-router-dom';\n\nvar SearchCards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchCards, _Component);\n\n  function SearchCards() {\n    var _this;\n\n    _classCallCheck(this, SearchCards);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchCards).call(this));\n    _this.types = [\"Artifact\", \"Conspiracy\", \"Creature\", \"Enchantment\", \"Instant\", \"Land\", \"Phenomenon\", \"Plane\", \"Planeswalker\", \"Scheme\", \"Sorcery\", \"Tribal\", \"Vanguard\"];\n    _this.state = {\n      name: '',\n      colors: '',\n      cardType: '',\n      showLogin: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showLogin = _this.showLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SearchCards, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      alert('Your favorite flavor is: ' + this.state.colors);\n      e.preventDefault();\n    }\n  }, {\n    key: \"showLogin\",\n    value: function showLogin() {\n      this.setState({\n        showLogin: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"cardSearch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Color:\"), React.createElement(\"select\", {\n        name: \"colors\",\n        value: this.state.colors,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Any\"), React.createElement(\"option\", {\n        value: \"White\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"White\"), React.createElement(\"option\", {\n        value: \"Black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Black\"), React.createElement(\"option\", {\n        value: \"Blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Blue\"), React.createElement(\"option\", {\n        value: \"Red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Red\"), React.createElement(\"option\", {\n        value: \"Green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Green\")), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Type:\"), React.createElement(\"select\", {\n        name: \"cardType\",\n        value: this.state.cardType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Any\"), this.types.map(function (type, i) {\n        return React.createElement(\"option\", {\n          key: type + i,\n          value: type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, type);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        id: \"find-card-button\",\n        onClick: _getCard({\n          name: \"name\",\n          value: this.state.name\n        }, {\n          name: \"colors\",\n          value: this.state.colors\n        }, {\n          name: \"type\",\n          value: this.state.cardType\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Generate Card\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), this.props.loggedIn ? React.createElement(\"button\", {\n        id: \"deck-button\",\n        onClick: _addToDeck(this.props.foundCard, this.props.deckId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"I want it!\") : this.state.showLogin ? React.createElement(User, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }) : React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Please \", React.createElement(\"a\", {\n        onClick: this.showLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"login\"), \" to create decks and play!\"));\n    }\n  }]);\n\n  return SearchCards;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getCard: function getCard(search) {\n      dispatch(_getCard(search));\n    },\n    addToDeck: function addToDeck() {\n      dispatch(_addToDeck);\n    }\n  };\n};\n\nexport default withRouter(connect(function (prevState) {\n  return prevState;\n}, mapDispatchToProps)(SearchCards));","map":{"version":3,"sources":["/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/SearchCards.js"],"names":["React","Component","connect","getCard","addToDeck","User","withRouter","SearchCards","types","state","name","colors","cardType","showLogin","handleChange","bind","handleSubmit","e","setState","target","value","alert","preventDefault","map","type","i","props","loggedIn","foundCard","deckId","mapDispatchToProps","dispatch","search","prevState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getCard, addToDeck } from '../redux'\nimport User from './User'\nimport { withRouter } from 'react-router-dom'\n\n\nclass SearchCards extends Component {\n    constructor() {\n        super()\n        this.types = [  \n            \"Artifact\",\n            \"Conspiracy\",\n            \"Creature\",\n            \"Enchantment\",\n            \"Instant\",\n            \"Land\",\n            \"Phenomenon\",\n            \"Plane\",\n            \"Planeswalker\",\n            \"Scheme\",\n            \"Sorcery\",\n            \"Tribal\",\n            \"Vanguard\"\n          ]\n        this.state = { name: '', colors: '', cardType: '', showLogin: false }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.showLogin = this.showLogin.bind(this)\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    handleSubmit(e) {\n        alert('Your favorite flavor is: ' + this.state.colors);\n        e.preventDefault();\n    }\n    showLogin() {\n        this.setState({showLogin: true})\n    }\n    render() {\n        return (\n            <div id=\"cardSearch\">\n                <form>\n                <label>Color:</label>\n                    <select name=\"colors\" value={this.state.colors} onChange={this.handleChange}>\n                        <option value=\"\">Any</option>\n                        <option value=\"White\">White</option>\n                        <option value=\"Black\">Black</option>\n                        <option value=\"Blue\">Blue</option>\n                        <option value=\"Red\">Red</option>\n                        <option value=\"Green\">Green</option>\n                    </select>\n                    <label>Type:</label>\n                    <select name=\"cardType\" value={this.state.cardType} onChange={this.handleChange}>\n                        <option value=\"\">Any</option>\n                        {this.types.map((type, i) => <option key={type + i} value={type}>{type}</option>)}\n                    </select>\n                    <br />\n                    <label>Name:</label>\n                    <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}/>\n                </form>\n                <button id=\"find-card-button\" onClick={getCard({name: \"name\", value: this.state.name}, {name:\"colors\", value:this.state.colors}, {name:\"type\", value: this.state.cardType})}>Generate Card</button>\n                <br />\n                {this.props.loggedIn ? <button id=\"deck-button\" onClick={addToDeck(this.props.foundCard, this.props.deckId)}>I want it!</button> : (this.state.showLogin) ? <User /> : <h4>Please <a onClick={this.showLogin}>login</a> to create decks and play!</h4>}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getCard: search => {\n            dispatch(getCard(search))\n        },\n        addToDeck: () => {\n            dispatch(addToDeck)\n        } \n    }\n}\n\nexport default withRouter(connect(prevState => prevState, mapDispatchToProps)(SearchCards))"]},"metadata":{},"sourceType":"module"}