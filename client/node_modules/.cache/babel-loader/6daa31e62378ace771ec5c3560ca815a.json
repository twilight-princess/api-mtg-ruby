{"ast":null,"code":"import _defineProperty from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/Decks.js\";\nimport React, { Component } from 'react';\nimport DeckSummary from './DeckSummary.js';\nimport '../styles/Deck.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createDeck } from '../redux';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    loggedIn: state.loggedIn,\n    decks: state.decks\n  };\n};\n\nvar Decks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Decks, _Component);\n\n  function Decks(props) {\n    var _this;\n\n    _classCallCheck(this, Decks);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Decks).call(this, props));\n    _this.state = {\n      loading: true,\n      loggedIn: false,\n      currentUser: {\n        decks: ''\n      },\n      decks: ''\n    };\n    _this.handleCreateDeck = _this.handleCreateDeck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Decks, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleCreateDeck\",\n    value: function handleCreateDeck(e) {\n      console.log(\"Created user deck: \".concat(this.state.deckName));\n      e.preventDefault();\n      this.setState(createDeck(this.state.deckName, this.state.deckDescription));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.loggedIn && !!this.props.currentUser.decks) {\n        return React.createElement(\"div\", {\n          className: \"decks\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Your Saved Decks\"), this.props.currentUser.decks.map(function (deck, i) {\n          return React.createElement(DeckSummary, {\n            key: deck.name + i,\n            deck: deck,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          });\n        }));\n      } else if (this.props.loggedIn) {\n        return React.createElement(\"div\", {\n          className: \"createDeck\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"You don't have any decks yet. Build one here to begin.\"), React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Enter a name for your new deck:\", React.createElement(\"input\", {\n          placeholder: \"Required\",\n          type: \"text\",\n          name: \"deckName\",\n          value: this.deckName,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), \"Enter a description:\", React.createElement(\"input\", {\n          placeholder: \"Optional\",\n          type: \"text\",\n          name: \"deckDescription\",\n          value: this.deckDescription,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.handleCreateDeck,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Create\")));\n      } else {\n        return React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Please \", React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"login\"), \" to view decks!\"));\n      }\n    }\n  }]);\n\n  return Decks;\n}(Component);\n\nexport default withRouter(connect(mapStateToProps)(Decks));","map":{"version":3,"sources":["/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/Decks.js"],"names":["React","Component","DeckSummary","Link","withRouter","connect","createDeck","mapStateToProps","state","currentUser","loggedIn","decks","Decks","props","loading","handleCreateDeck","bind","handleChange","e","target","name","value","setState","console","log","deckName","preventDefault","deckDescription","map","deck","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport DeckSummary from './DeckSummary.js'\nimport '../styles/Deck.css'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createDeck } from '../redux'\n\nconst mapStateToProps = (state) => {\n    return { currentUser: state.currentUser, loggedIn: state.loggedIn, decks: state.decks }\n  }\n\nclass Decks extends Component {\n    constructor(props) {\n    super(props)\n    this.state = { loading: true, loggedIn: false, currentUser: {decks: ''}, decks:''}\n    this.handleCreateDeck = this.handleCreateDeck.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target\n        this.setState({\n          [name]: value\n        })\n    }\n    handleCreateDeck(e) {\n        console.log(`Created user deck: ${this.state.deckName}`)\n        e.preventDefault()\n        this.setState(createDeck(this.state.deckName, this.state.deckDescription))\n    }\n\n    render() {\n        if (this.props.loggedIn && !!this.props.currentUser.decks) { \n            return (\n                <div className=\"decks\">\n                    <h4>Your Saved Decks</h4>\n                    {this.props.currentUser.decks.map((deck, i) => {\n                        return <DeckSummary key={deck.name + i} deck={deck} />\n                    })}\n                </div>\n            )\n        } else if (this.props.loggedIn) {\n            return (\n                <div className=\"createDeck\">\n                    <h3>You don't have any decks yet. Build one here to begin.</h3>\n                    <form>\n                        Enter a name for your new deck: \n                        <input placeholder=\"Required\" type=\"text\" name=\"deckName\" value={this.deckName} onChange={this.handleChange} />\n                        <br />\n                        Enter a description:                     \n                        <input placeholder=\"Optional\" type=\"text\" name=\"deckDescription\" value={this.deckDescription} onChange={this.handleChange} />\n                        <button onClick={this.handleCreateDeck}>Create</button>\n                    </form>\n                </div>\n            )\n        } else {\n            return <h3><b>Please <Link to='/'>login</Link> to view decks!</b></h3>\n        }\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Decks))"]},"metadata":{},"sourceType":"module"}