{"ast":null,"code":"import _classCallCheck from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/darlenewelch/rubies/api-mtg-ruby/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/Deck.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveDeckToDB } from '../redux';\nimport '../styles/Deck.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport Card from './Card';\nimport SearchCards from './SearchCards';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    loggedIn: state.loggedIn,\n    foundCard: state.foundCard\n  };\n};\n\nvar landCount = function landCount(count, curr) {\n  if (curr.types.includes(\"Land\")) count++;\n  return count;\n};\n\nvar creatureCount = function creatureCount(count, curr) {\n  if (curr.types.includes(\"Creature\")) count++;\n  return count;\n};\n\nvar Deck =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Deck, _Component);\n\n  function Deck() {\n    _classCallCheck(this, Deck);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Deck).apply(this, arguments));\n  }\n\n  _createClass(Deck, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"Props: \", this.props);\n      console.log(\"State: \", this.props.location.state);\n      var deck = {};\n\n      if (this.props.loggedIn === true) {\n        var deckId = this.props.location.state.deck._id;\n        deck = this.props.currentUser.decks.filter(function (deck) {\n          return deck._id === deckId;\n        })[0];\n      }\n\n      return React.createElement(\"div\", {\n        className: \"deck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.loggedIn ? React.createElement(\"div\", {\n        className: \"searchWithDeck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"searchDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(SearchCards, {\n        deckId: deck._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cardDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cardGrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"leftInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, console.log('finded cards: ', this.props.foundCard)), React.createElement(Card, {\n        card: this.props.foundCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"rightInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.foundCard.text))), React.createElement(\"div\", {\n        className: \"deckDetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, deck.name), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, deck.cards.length, \" Cards\"), \" -\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, deck.cards.reduce(landCount, 0), \" Lands\"), \" -\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, deck.cards.reduce(creatureCount, 0), \" Creatures\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: saveDeckToDB(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Save\")), React.createElement(\"div\", {\n        className: \"viewOfDeck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, deck.cards.map(function (card, i) {\n        return React.createElement(Card, {\n          key: card.name + i,\n          card: card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n      })))) : React.createElement(\"p\", {\n        className: \"loginNote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Please \", React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"login\"), \" to view a deck!\"));\n    }\n  }]);\n\n  return Deck;\n}(Component);\n\nexport default withRouter(connect(mapStateToProps)(Deck));","map":{"version":3,"sources":["/Users/darlenewelch/rubies/api-mtg-ruby/client/src/components/Deck.js"],"names":["React","Component","connect","saveDeckToDB","Link","withRouter","Card","SearchCards","mapStateToProps","state","currentUser","loggedIn","foundCard","landCount","count","curr","types","includes","creatureCount","Deck","console","log","props","location","deck","deckId","_id","decks","filter","text","name","cards","length","reduce","map","card","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { saveDeckToDB } from '../redux'\nimport '../styles/Deck.css'\nimport { Link, withRouter } from 'react-router-dom'\nimport Card from './Card'\nimport SearchCards from './SearchCards'\n\nconst mapStateToProps = state => {\n    return { currentUser: state.currentUser, loggedIn: state.loggedIn, foundCard: state.foundCard }\n}\n\nconst landCount = (count, curr) => {\n    if (curr.types.includes(\"Land\"))\n        count++\n    return count\n}\nconst creatureCount = (count, curr) => {\n    if (curr.types.includes(\"Creature\"))\n        count++\n    return count\n}\n\nclass Deck extends Component {\n\n    render() {\n        console.log(\"Props: \", this.props)\n        console.log(\"State: \", this.props.location.state)\n        let deck = {}\n        if (this.props.loggedIn === true) {\n            const deckId = this.props.location.state.deck._id\n            deck = this.props.currentUser.decks.filter(deck => deck._id === deckId)[0]\n        }\n        return (\n            <div className=\"deck\">\n            {this.props.loggedIn ?\n                <div className=\"searchWithDeck\">\n                    <div className=\"searchDetails\">\n                        <SearchCards deckId={deck._id} />\n                    </div>\n                    <div className=\"cardDetails\">\n                        <div className=\"cardGrid\">\n                            <div id=\"leftInfo\">\n                            {console.log('finded cards: ', this.props.foundCard)}\n                                \n                            </div>\n                            <Card card={this.props.foundCard} />\n                            <div id=\"rightInfo\">{this.props.foundCard.text}</div>\n                        </div>\n                    </div>\n                    <div className=\"deckDetails\">\n                        <h1>{deck.name}</h1>\n                        <span>{deck.cards.length} Cards</span> -\n                        <span>{deck.cards.reduce(landCount, 0)} Lands</span> -\n                        <span>{deck.cards.reduce(creatureCount, 0)} Creatures</span>\n                        <br />\n                        <br />\n                        <span><button onClick={saveDeckToDB()}>Save</button></span>\n\n                        <div className=\"viewOfDeck\">\n                            {deck.cards.map((card, i) => {\n                                return <Card key={card.name + i} card={card} />\n                            })}\n                        </div>\n                    </div>\n                </div>\n                : <p className=\"loginNote\">Please <Link to='/'>login</Link> to view a deck!</p>\n            }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(Deck))\n\n"]},"metadata":{},"sourceType":"module"}